{"version":3,"sources":["MainPage/MainPage.js","App/App.js","serviceWorker.js","index.js"],"names":["MainPage","className","href","Component","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"sOAuDgBA,E,iLAhDR,OACI,6BACI,wBAAIC,UAAU,QAAd,0BACA,yBAAKA,UAAU,cACX,wBAAIA,UAAU,SAAd,eACA,wBAAIA,UAAU,YAAd,sBAEJ,iCACI,wBAAIA,UAAU,eAAd,gJAEJ,iCACI,wBAAIA,UAAU,QAAd,mBACA,uBAAGA,UAAU,aAAb,ooBAMJ,6BAASA,UAAU,UACf,wBAAIA,UAAU,eAAd,gCACA,wBAAIA,UAAU,SAAd,QACA,wBAAIA,UAAU,aAAd,sBACA,uBAAGA,UAAU,WAAb,6KAEA,wBAAIA,UAAU,SAAd,QACA,wBAAIA,UAAU,aAAd,2CACA,uBAAGA,UAAU,WAAb,qJAGA,wBAAIA,UAAU,aAAd,eACA,uBAAGA,UAAU,WAAb,mHAEJ,iCACI,wBAAIA,UAAU,YAAd,YACA,uBAAGA,UAAU,eAAeC,KAAK,mEAAkE,gDACnG,uBAAGD,UAAU,eAAeC,KAAK,6CAA4C,wCAC7E,uBAAGD,UAAU,eAAeC,KAAK,yDAAwD,qDAE7F,6BAASD,UAAU,WACf,uBAAGA,UAAU,eAAeC,KAAK,sCAAqC,uCACtE,uBAAGD,UAAU,eAAeC,KAAK,2DAA0D,0CAC3F,wBAAID,UAAU,gBAAd,gC,GA9CGE,aCURC,MARf,WACE,OACE,yBAAKH,UAAU,OACb,kBAAC,EAAD,QCKcI,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCbNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SD4H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,iB","file":"static/js/main.1c813e5d.chunk.js","sourcesContent":["import React, { Component } from 'react';\n\nclass MainPage extends Component {\n\n\n\n    render() {\n        return (\n            <div>\n                <h1 className=\"name\">Declan M. J. Bernardin</h1>\n                <div className=\"sectionOne\">\n                    <h1 className=\"title\">Full Stack </h1>\n                    <h1 className=\"titleTwo\">Software Engineer</h1>\n                </div>\n                <section>\n                    <h1 className=\"description\">Hi, I'm Declan Bernardin. I am a Full Stack Software Engineer. Meaning I get to create websites and applications that people use everyday. </h1>\n                </section>\n                <section>\n                    <h1 className=\"more\">OK GIVE US MORE</h1>\n                    <p className=\"shortDesc\"> Alrighty then. let me tell you a bit more about myself. I graduated from the School Of Environmental Studies in 2017. I then went\n                        to Inver Hills Community College for a year to get a start on my generals. I was not sure what career I wanted to pursue so I\n                        took a year off and worked as a kitchen supervisor in a small restaurant. I have always been into computers and technology and\n                        figured I wanted to go into the IT industry. So when I heard about Prime Digital Academy a software engineering program I jumped on it.\n                        For those of you that do not know what prime is they teach and produce Full Stack Software Engineers and UX designers. </p>\n                </section>\n                <section className=\"career\">\n                    <h1 className=\"careerTitle\" >Summary Of My Growing Career</h1>\n                    <h1 className=\"years\">2018</h1>\n                    <h2 className=\"jobTitles\">Kitchen Supervisor</h2>\n                    <p className=\"jobDesc\"> I was a supervisor of a small kitchen staff in a movie theater restaurant that served really good food. I worked here for a year to save up money \n                    to go back to school. </p>\n                    <h1 className=\"years\">2019</h1>\n                    <h2 className=\"jobTitles\">Full Stack Software Engineering Student</h2>\n                    <p className=\"jobDesc\">During my time at prime I got the chance to make a application for our client 2D Con a gaming convention that is put on in Minneapolis\n                        every year\n                    </p>\n                    <h2 className=\"jobTitles\">Whats Next?</h2>\n                    <p className=\"jobDesc\">Im excited to start my career as a Software Engineer and am looking for a job that will be a good fit for me. </p>\n                </section>\n                <section>\n                    <h1 className=\"projects\">Projects</h1>\n                    <a className=\"projectTitle\" href=\"https://github.com/DeclanBernardin/Wheres-The-Fish-Solo-Project\"><h1 >Where The Fish?</h1></a>\n                    <a className=\"projectTitle\" href=\"https://github.com/DeclanBernardin/ConOps\"><h1>Con Ops</h1></a>\n                    <a className=\"projectTitle\" href=\"https://github.com/DeclanBernardin/Belnap-Photography\"><h1>Belnap Photography </h1></a>\n                </section>\n                <section className=\"contact\">\n                    <a className=\"contactStuff\" href=\"https://github.com/DeclanBernardin\"><h1>Github</h1></a>\n                    <a className=\"contactStuff\" href=\"https://www.linkedin.com/in/declan-bernardin-678045191/\"><h1>Linked In</h1></a>\n                    <h1 className=\"contactStuff\">dmjbernardin@yahoo.com</h1>\n                </section>\n            </div>\n        )\n    }\n}\n\nexport default (MainPage);","import React from 'react';\nimport './App.css';\nimport MainPage from '../MainPage/MainPage'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <MainPage></MainPage>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}